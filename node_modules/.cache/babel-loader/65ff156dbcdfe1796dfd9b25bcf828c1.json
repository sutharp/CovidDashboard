{"ast":null,"code":"var _jsxFileName = \"V:\\\\LiveProject\\\\CovidDashboard\\\\src\\\\components\\\\chart.js\";\nimport React, { Component } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"./Chart.css\";\n\nclass Chart extends Component {\n  render() {\n    let labels, cases, recovered, deaths, dailycases, dailyrecovered, dailydeaths;\n\n    if (this.props.type === \"in\" && this.props.stateCode === \"tt\") {\n      labels = this.props.country.cases_time_series != null ? this.props.country.cases_time_series.map(data => data.date) : null;\n      cases = this.props.country.cases_time_series != null ? this.props.country.cases_time_series.map(data => data.totalconfirmed) : null;\n      recovered = this.props.country.cases_time_series != null ? this.props.country.cases_time_series.map(data => data.totalrecovered) : null;\n      deaths = this.props.country.cases_time_series != null ? this.props.country.cases_time_series.map(data => data.totaldeceased) : null;\n      dailycases = this.props.country.cases_time_series != null ? this.props.country.cases_time_series.map(data => data.dailyconfirmed) : null;\n      dailyrecovered = this.props.country.cases_time_series != null ? this.props.country.cases_time_series.map(data => data.dailyrecovered) : null;\n      dailydeaths = this.props.country.cases_time_series != null ? this.props.country.cases_time_series.map(data => data.dailydeceased) : null;\n    } else if (this.props.type === \"in\" && this.props.stateCode !== \"tt\") {\n      if (this.props.stateData.states_daily != null) {\n        labels = this.props.stateData.states_daily.map(data => {\n          if (data.status === \"Confirmed\") {\n            return data.date;\n          }\n        }).filter(function (x) {\n          return x != undefined;\n        });\n        cases = this.props.stateData.states_daily.map(data => {\n          if (data.status === \"Confirmed\") {\n            return data[this.props.stateCode.toLowerCase()];\n          }\n        }).filter(function (x) {\n          return x != undefined;\n        });\n        recovered = this.props.stateData.states_daily.map(data => {\n          if (data.status === \"Recovered\") {\n            return data[this.props.stateCode.toLowerCase()];\n          }\n        }).filter(function (x) {\n          return x != undefined;\n        });\n        deaths = this.props.stateData.states_daily.map(data => {\n          if (data.status === \"Deceased\") {\n            return data[this.props.stateCode.toLowerCase()];\n          }\n        }).filter(function (x) {\n          return x != undefined;\n        });\n      }\n    } else {\n      labels = this.props.country.cases != null ? Object.keys(this.props.country.cases) : null;\n      cases = this.props.country.cases != null ? Object.values(this.props.country.cases) : null;\n      recovered = this.props.country.recovered != null ? Object.values(this.props.country.recovered) : null;\n      deaths = this.props.country.deaths != null ? Object.values(this.props.country.deaths) : null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"db-grap-outer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"db-bar-graph-data graph-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: {\n        labels: this.props.labels,\n        datasets: [{\n          data: this.props.data,\n          backgroundColor: [\"#005DD6\", \"#27BE5F\", \"#FF0808\"],\n          hoverBackgroundColor: [\"cornflowerBlue\", \"lightGreen\", \"red\"]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: \"Current Updates\",\n          fontStyle: \"bold\"\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      },\n      width: 500,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"db-bar-graph-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, this.props.type == \"in\" && this.props.stateCode == \"tt\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 graph-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"Confirmed\",\n          data: cases,\n          backgroundColor: \"#045ed6\",\n          borderColor: \"#045ed6\",\n          fill: false\n        }, {\n          label: \"Recovered\",\n          labelColor: \"lightGreen\",\n          data: recovered,\n          backgroundColor: \"#2cbe61\",\n          borderColor: \"#2cbe61\",\n          fill: false\n        }, {\n          label: \"Deaths\",\n          data: deaths,\n          backgroundColor: \"#FF0808\",\n          borderColor: \"#FF0808\",\n          fill: false\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false\n            }\n          }]\n        }\n      },\n      width: 500,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 graph-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"Confirmed\",\n          data: dailycases,\n          backgroundColor: \"#045ed6\",\n          borderColor: \"#045ed6\",\n          fill: false\n        }, {\n          label: \"Recovered\",\n          labelColor: \"lightGreen\",\n          data: dailyrecovered,\n          backgroundColor: \"#2cbe61\",\n          borderColor: \"#2cbe61\",\n          fill: false\n        }, {\n          label: \"Deaths\",\n          data: dailydeaths,\n          backgroundColor: \"#FF0808\",\n          borderColor: \"#FF0808\",\n          fill: false\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false\n            }\n          }]\n        }\n      },\n      width: 500,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }))) : this.props.type == \"in\" && this.props.stateCode != \"tt\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 graph-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"Confirmed\",\n          data: cases,\n          backgroundColor: \"#045ed6\",\n          borderColor: \"#045ed6\",\n          fill: false\n        }, {\n          label: \"Recovered\",\n          labelColor: \"lightGreen\",\n          data: recovered,\n          backgroundColor: \"#2cbe61\",\n          borderColor: \"#2cbe61\",\n          fill: false\n        }, {\n          label: \"Deaths\",\n          data: deaths,\n          backgroundColor: \"#FF0808\",\n          borderColor: \"#FF0808\",\n          fill: false\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false\n            }\n          }]\n        }\n      },\n      width: 500,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 graph-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"Confirmed\",\n          data: cases,\n          backgroundColor: \"#045ed6\",\n          borderColor: \"#045ed6\",\n          fill: false\n        }, {\n          label: \"Recovered\",\n          labelColor: \"lightGreen\",\n          data: recovered,\n          backgroundColor: \"#2cbe61\",\n          borderColor: \"#2cbe61\",\n          fill: false\n        }, {\n          label: \"Deaths\",\n          data: deaths,\n          backgroundColor: \"#FF0808\",\n          borderColor: \"#FF0808\",\n          fill: false\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: false\n            }\n          }]\n        }\n      },\n      width: 500,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    })))));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["V:/LiveProject/CovidDashboard/src/components/chart.js"],"names":["React","Component","Line","Bar","Chart","render","labels","cases","recovered","deaths","dailycases","dailyrecovered","dailydeaths","props","type","stateCode","country","cases_time_series","map","data","date","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailydeceased","stateData","states_daily","status","filter","x","undefined","toLowerCase","Object","keys","values","datasets","backgroundColor","hoverBackgroundColor","responsive","maintainAspectRatio","legend","display","title","text","fontStyle","scales","yAxes","ticks","beginAtZero","label","borderColor","fill","labelColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport \"./Chart.css\";\r\n\r\nclass Chart extends Component {\r\n\r\n\r\n    render() {\r\n        let labels, cases, recovered, deaths, dailycases, dailyrecovered, dailydeaths;\r\n        if (this.props.type === \"in\" && this.props.stateCode === \"tt\") {\r\n            labels = (this.props.country.cases_time_series != null) ? this.props.country.cases_time_series.map(data => data.date) : null;\r\n            cases = (this.props.country.cases_time_series != null) ? this.props.country.cases_time_series.map(data => data.totalconfirmed) : null;\r\n            recovered = (this.props.country.cases_time_series != null) ? this.props.country.cases_time_series.map(data => data.totalrecovered) : null;\r\n            deaths = (this.props.country.cases_time_series != null) ? this.props.country.cases_time_series.map(data => data.totaldeceased) : null;\r\n            dailycases = (this.props.country.cases_time_series != null) ? this.props.country.cases_time_series.map(data => data.dailyconfirmed) : null;\r\n            dailyrecovered = (this.props.country.cases_time_series != null) ? this.props.country.cases_time_series.map(data => data.dailyrecovered) : null;\r\n            dailydeaths = (this.props.country.cases_time_series != null) ? this.props.country.cases_time_series.map(data => data.dailydeceased) : null;\r\n        } else if (this.props.type === \"in\" && this.props.stateCode !== \"tt\") {\r\n            if (this.props.stateData.states_daily != null) {\r\n                labels = this.props.stateData.states_daily.map(data => {\r\n                    if (data.status === \"Confirmed\") { return data.date }\r\n                }).filter(function (x) { return x != undefined; });\r\n                cases = this.props.stateData.states_daily.map(data => {\r\n                    if (data.status === \"Confirmed\") { return data[this.props.stateCode.toLowerCase()] }\r\n                }).filter(function (x) { return x != undefined; });\r\n                recovered = this.props.stateData.states_daily.map(data => {\r\n                    if (data.status === \"Recovered\") { return data[this.props.stateCode.toLowerCase()] }\r\n                }).filter(function (x) { return x != undefined; });\r\n                deaths = this.props.stateData.states_daily.map(data => {\r\n                    if (data.status === \"Deceased\") { return data[this.props.stateCode.toLowerCase()] }\r\n                }).filter(function (x) { return x != undefined; });\r\n            }\r\n        } else {\r\n            labels = (this.props.country.cases != null) ? Object.keys(this.props.country.cases) : null;\r\n            cases = (this.props.country.cases != null) ? Object.values(this.props.country.cases) : null;\r\n            recovered = (this.props.country.recovered != null) ? Object.values(this.props.country.recovered) : null;\r\n            deaths = (this.props.country.deaths != null) ? Object.values(this.props.country.deaths) : null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"db-grap-outer-section\">\r\n                <div className=\"db-bar-graph-data graph-responsive\">\r\n                    <Bar data={{\r\n                        labels: this.props.labels,\r\n                        datasets: [{\r\n                            data: this.props.data,\r\n                            backgroundColor: [\"#005DD6\", \"#27BE5F\", \"#FF0808\"],\r\n                            hoverBackgroundColor: [\"cornflowerBlue\", \"lightGreen\", \"red\"]\r\n                        }]\r\n                    }} options={{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        legend: { display: false },\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Current Updates\",\r\n                            fontStyle: \"bold\"\r\n                        },\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        }\r\n                    }} width={500} height={200} />\r\n                </div>\r\n                <div className=\"db-bar-graph-data\">\r\n                    {((this.props.type == \"in\") && (this.props.stateCode == \"tt\")) ?\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 graph-responsive\">\r\n                                <Line data={{\r\n                                    labels: labels,\r\n                                    datasets: [{\r\n                                        label: \"Confirmed\",\r\n                                        data: cases,\r\n                                        backgroundColor: \"#045ed6\",\r\n                                        borderColor: \"#045ed6\",\r\n                                        fill: false\r\n                                    },\r\n                                    {\r\n                                        label: \"Recovered\",\r\n                                        labelColor: \"lightGreen\",\r\n                                        data: recovered,\r\n                                        backgroundColor: \"#2cbe61\",\r\n                                        borderColor: \"#2cbe61\",\r\n                                        fill: false\r\n                                    },\r\n                                    {\r\n                                        label: \"Deaths\",\r\n                                        data: deaths,\r\n                                        backgroundColor: \"#FF0808\",\r\n                                        borderColor: \"#FF0808\",\r\n                                        fill: false\r\n                                    }]\r\n                                }} options={{\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    scales: {\r\n                                        yAxes: [{\r\n                                            ticks: {\r\n                                                beginAtZero: false\r\n                                            }\r\n                                        }]\r\n                                    }\r\n                                }} width={500} height={200} />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-12 graph-responsive\">\r\n                                <Line data={{\r\n                                    labels: labels,\r\n                                    datasets: [{\r\n                                        label: \"Confirmed\",\r\n                                        data: dailycases,\r\n                                        backgroundColor: \"#045ed6\",\r\n                                        borderColor: \"#045ed6\",\r\n                                        fill: false\r\n                                    },\r\n                                    {\r\n                                        label: \"Recovered\",\r\n                                        labelColor: \"lightGreen\",\r\n                                        data: dailyrecovered,\r\n                                        backgroundColor: \"#2cbe61\",\r\n                                        borderColor: \"#2cbe61\",\r\n                                        fill: false\r\n                                    },\r\n                                    {\r\n                                        label: \"Deaths\",\r\n                                        data: dailydeaths,\r\n                                        backgroundColor: \"#FF0808\",\r\n                                        borderColor: \"#FF0808\",\r\n                                        fill: false\r\n                                    }]\r\n                                }} options={{\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    scales: {\r\n                                        yAxes: [{\r\n                                            ticks: {\r\n                                                beginAtZero: false\r\n                                            }\r\n                                        }]\r\n                                    }\r\n                                }} width={500} height={200} />\r\n                            </div>\r\n                        </div> :\r\n                        ((this.props.type == \"in\") && (this.props.stateCode != \"tt\")) ?\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 graph-responsive\">\r\n                                    <Line data={{\r\n                                        labels: labels,\r\n                                        datasets: [{\r\n                                            label: \"Confirmed\",\r\n                                            data: cases,\r\n                                            backgroundColor: \"#045ed6\",\r\n                                            borderColor: \"#045ed6\",\r\n                                            fill: false\r\n                                        },\r\n                                        {\r\n                                            label: \"Recovered\",\r\n                                            labelColor: \"lightGreen\",\r\n                                            data: recovered,\r\n                                            backgroundColor: \"#2cbe61\",\r\n                                            borderColor: \"#2cbe61\",\r\n                                            fill: false\r\n                                        },\r\n                                        {\r\n                                            label: \"Deaths\",\r\n                                            data: deaths,\r\n                                            backgroundColor: \"#FF0808\",\r\n                                            borderColor: \"#FF0808\",\r\n                                            fill: false\r\n                                        }]\r\n                                    }} options={{\r\n                                        responsive: true,\r\n                                        maintainAspectRatio: false,\r\n                                        scales: {\r\n                                            yAxes: [{\r\n                                                ticks: {\r\n                                                    beginAtZero: false\r\n                                                }\r\n                                            }]\r\n                                        }\r\n                                    }} width={500} height={200} />\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12 graph-responsive\">\r\n                                    <Line data={{\r\n                                        labels: labels,\r\n                                        datasets: [{\r\n                                            label: \"Confirmed\",\r\n                                            data: cases,\r\n                                            backgroundColor: \"#045ed6\",\r\n                                            borderColor: \"#045ed6\",\r\n                                            fill: false\r\n                                        },\r\n                                        {\r\n                                            label: \"Recovered\",\r\n                                            labelColor: \"lightGreen\",\r\n                                            data: recovered,\r\n                                            backgroundColor: \"#2cbe61\",\r\n                                            borderColor: \"#2cbe61\",\r\n                                            fill: false\r\n                                        },\r\n                                        {\r\n                                            label: \"Deaths\",\r\n                                            data: deaths,\r\n                                            backgroundColor: \"#FF0808\",\r\n                                            borderColor: \"#FF0808\",\r\n                                            fill: false\r\n                                        }]\r\n                                    }} options={{\r\n                                        responsive: true,\r\n                                        maintainAspectRatio: false,\r\n                                        scales: {\r\n                                            yAxes: [{\r\n                                                ticks: {\r\n                                                    beginAtZero: false\r\n                                                }\r\n                                            }]\r\n                                        }\r\n                                    }} width={500} height={200} />\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}